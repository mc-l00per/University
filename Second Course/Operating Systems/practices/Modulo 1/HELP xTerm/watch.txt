WATCH(1)                      Linux User's Manual                     WATCH(1)



NAME
       watch - execute a program periodically, showing output fullscreen

SYNOPSIS
       watch [-bdehpvtx] [-n seconds] [--beep] [--differences[=cumulative]]
       [--errexit] [--exec] [--help] [--interval=seconds] [--no-title] [--pre‐
       cise] [--version] command

DESCRIPTION
       watch runs command repeatedly, displaying its output and errors (the
       first screenfull).  This allows you to watch the program output change
       over time.  By default, the program is run every 2 seconds; use -n or
       --interval to specify a different interval. Normally, this interval is
       interpreted as the amout of time between the completion of one run of
       command and the beginning of the next run. However, with the -p or
       --precise option, you can make watch attempt to run command every
       interval seconds. Try it with ntptime and notice how the fractional
       seconds stays (nearly) the same, as opposed to normal mode where they
       continuously increase.

       The -d or --differences flag will highlight the differences between
       successive updates.  Using --differences=cumulative makes highlighting
       "sticky", presenting a running display of all positions that have ever
       changed.  The -t or --no-title option turns off the header showing the
       interval, command, and current time at the top of the display, as well
       as the following blank line.  The -b or --beep option causes the com‐
       mand to beep if it has a non-zero exit.

       watch will normally run until interrupted. If you want watch to exit on
       an error from the program running use the -e or --errexit options,
       which will cause watch to exit if the return value from the program is
       non-zero.


NOTE
       Note that command is given to "sh -c" which means that you may need to
       use extra quoting to get the desired effect.  You can disable this with
       the -x or --exec option, which passes the command to exec(2) instead.

       Note that POSIX option processing is used (i.e., option processing
       stops at the first non-option argument).  This means that flags after
       command don't get interpreted by watch itself.

EXAMPLES
       To watch for mail, you might do

              watch -n 60 from

       To watch the contents of a directory change, you could use

              watch -d ls -l

       If you're only interested in files owned by user joe, you might use

              watch -d 'ls -l | fgrep joe'

       To see the effects of quoting, try these out

              watch echo $$
              watch echo '$$'
              watch echo "'"'$$'"'"

       To see the effect of precision time keeping, try adding -p to

              watch -n 10 sleep 1

       You can watch for your administrator to install the latest kernel with

              watch uname -r

       (Note that -p isn't guaranteed to work across reboots, especially in
       the face of ntpdate or other bootup time-changing mechanisms)

BUGS
       Upon terminal resize, the screen will not be correctly repainted until
       the next scheduled update.  All --differences highlighting is lost on
       that update as well.

       Non-printing characters are stripped from program output.  Use "cat -v"
       as part of the command pipeline if you want to see them.

       --precise mode doesn't yet have advanced temporal distortion technology
       to compensate for a command that takes more than interval seconds to
       execute.  watch also can get into a state where it rapid-fires as many
       executions of command as it can to catch up from a previous executions
       running longer than interval (for example, netstat taking ages on a DNS
       lookup).

AUTHORS
       The original watch was written by Tony Rems <rembo@unisoft.com> in
       1991, with mods and corrections by Francois Pinard.  It was reworked
       and new features added by Mike Coleman <mkc@acm.org> in 1999.  The
       beep, exec, and error handling features were added by Morty Abzug
       <morty@frakir.org> in 2008.  On a not so dark and stormy morning in
       March of 2003, Anthony DeRobertis <asd@suespammers.org> got sick of his
       watches that should update every minute eventually updating many sec‐
       onds after the minute started, and added microsecond precision.



                                  2009 May 11                         WATCH(1)
